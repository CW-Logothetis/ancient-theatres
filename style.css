* {box-sizing: border-box;}

html {
    font-size: 0.625rem;  
}

body {
    margin: 0;
    font-family: 'Source Sans Pro', sans-serif;
    font-family: 'Source Serif Pro', serif;
    font-size: 1rem;
    color: #D0D6F9;
    background-color: #0F170B;
    line-height: 1.5; /* the default of 1 is too crushed. Start at 1.5 and play around*/
}

/*good idea on all sites to default all images to this. And display:block can solve an occasional spacing issue.
But can also cause others, so keep in mind*/
img {
    max-width: 100%;
    width: 100px;
    display: block;
}

/* ============================================================================================
===============================================================================================
    TYPOGRAPHY       ==========================================================================
===============================================================================================
=============================================================================================== */


h1, h2, strong {
    /* Good idea to stop you later typing 'bold' and forgetting it only goes up by 100pts */
    color: #D0D6F9;
    font-weight: 700;
}

p {
    font-size: 1.6rem;
    font-family: 'Source Sans Pro', sans-serif;
}

.sans {
    font-family: 'Source Sans Pro', sans-serif;
}

/* .accent-color {
    color: #FFE600;
} */




.hero-title {
    /* position: absolute;*/
    /* height: 120px;
    left: 0%;
    right: 0%; 
    top: calc(50% - 120px/2 - 60.5px);  */
    margin: 0.25em;

    font-weight: 400;
    font-size: 4.8rem;
    /* line-height: 60px; */

    color: #BCA736;

    text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.69);
}

.hero-subtitle {
    /* position: absolute;
    height: 30px;
    left: 11.93%;
    right: 11.93%;*/
    /* top: calc(50% - 30px/2 + 57.5px);  */
    margin: 0;

    font-size: 2rem;
    font-weight: 400;
    /* line-height: 3rem; */
    letter-spacing: 1px;

    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);
}

.hero-p {
    /* position: absolute;
    height: 20px;
    left: -7.34%;
    right: -7.34%;*/
    /* top: calc(50% - 20px/2 - 110.5px);  */
    margin: 0;
    
    color:#fff;
    font-weight: 400;
    /* line-height: 1.8rem; */
    letter-spacing: 4.5px;
}

.section-title {
    font-size: 1.8rem;
    color: #000;
    margin-top: 1.8em;
}

.section-title::after {
    content: ""; /*must have content, even if blank*/
    display: block; /*must have display or position*/
    width: 60px;
    height: 3px;
    margin-top: 10px;
    background: #FFE600; 
}

.section-title-center::after {
    margin-left: auto;
    margin-right: auto;
}

.section-title:first-child {
    margin-top: 0;
}

/* ========================================================================
only for template pages*/
.page-title,
.subtitle {
    grid-column: 2 / -2;
    color: #000;
    text-align: center;
}

.page-title {
    font-size: 4.8rem;
    margin-bottom: 0;
}

.page-title::after {
    content: '';
    display: block;
    width: 100%;
    height: 30px;
    background: #FFE600;
    margin-top: -40px;
    margin-left: 15px;
}

.subtitle {
    margin: .8em 0 4.8em;
    font-size: 1.8rem;
}


/* ========================================================================
    Buttons
=========================================================================== */

.btn {
    padding: .8em 2.8em;
    font-weight: 700;
    font-size: 1.6rem;
    margin-top: .8em;
    text-decoration: none;
    border: 0;
    cursor: pointer; 
}

.btn-primary {
    background: #FFE600;
    color: #000;
    /* btn is in grid, so it will stretch. Start will shrink it to size */
    justify-self: start;
}

.btn-primary:hover,
.btn-primary:focus {
    background: #ffc400;
}

.btn-form {
    justify-self: end;
}

/* ============================================================================================
===============================================================================================
   LAYOUT - MOBILE FIRST   ====================================================================
===============================================================================================
=============================================================================================== */

/* ==================
    general layout
===================== */

.main-grid {
    /* minmax on narrow, outer columns a good start; effectively they create equal padding throughout, for easy alignment. Then 0-500 screen size. 
    Smallest devices are over 300, but use 0px rather than 300px cos you never know */
    display: grid;
    grid-template-columns: minmax(1em, 1fr) minmax(0px, 500px) minmax(1em, 1fr);
    grid-column-gap: 1.5em;
}

@media (min-width: 600px) {
    .main-grid {
        grid-template-columns: minmax(1em, 1fr) repeat(3, minmax(150px, 320px)) minmax(1em, 1fr);
    }
}

/* navigation */

.header {
    background-color: #0F170B;
}

.header-home {
    background: #0F170B;
    opacity: 0.9;
    position: relative;
    width: 100%; /*without this the absolute header would stretch 
    the whole screen and not align with the coloumns below*/
}

.header-content {
    display: flex;
    grid-column: 1 / -1;
}

.logo-link {
    margin: 0;
    padding-top: 3em;
  
    transform: translate(-10px, -2px) rotate(-45deg) scale(0.6);
}

.nav {
    position: fixed; /* for mobile, to cover screen when pops out*/
    background: #000;
    width: 100%;
    /* 0 0 0 0 fills the screen with background color 100% left takes it all off screen*/
    top: 0;
    right: 0;
    bottom: 0;
    left: 100%;
    transform: translateX(0);
    transition: transform 250ms; 
    z-index: 1;
    opacity: 1;
}

.navigation-open { 
    transform: translateX(-100%);
}

.nav-list {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    /* 100% height spreads the three links the length of the viewport*/
    height: 100%;
    align-items: center;
    justify-content: space-around;
    flex-direction: column;
}

.nav-link {
    color: #fff;
    text-decoration: none;
    font-size: 4.8rem;
    font-weight: 700;
}

.nav-link:hover,
.nav-link:focus {
    color: #FFE600;
}

.close-nav {
    border: 0;
    background: 0;
    color: #FFE600;
    font-weight: 700;
    font-size: 4.8rem;
    cursor: pointer;
    padding: .8em;
    position: absolute; /*otherwise it pushes the three links down and user needs to scroll*/
}

.open-nav {
    border: 0;
    background: 0;
    color: #fff;
    cursor: pointer;
    padding: .8em;
    margin-left: auto;
    font-size: 2.4em;
}

.current {
    border-bottom: 1px solid #FFE600;
}

@media (min-width: 600px) {
    .open-nav,
    .close-nav {
        display: none;
    }
    
    .nav {
        position: initial; /*display: initial on any element, 
        it will set it to inline, even if it's a block element by default*/
    }

    .nav-list {
        flex-direction: row;
        justify-content: flex-start;
    }
    
    .nav-item {
        margin-left: 3.22em;
    }
    
    .nav-link {
        font-size: 1.6rem;
    }

    .header-home .nav {
        background: transparent;
    } 

}

/* footer - on every page, hence me putting it in general layout */

.footer {
    background: #0F170B;
    margin-top: 4em;
    color: white;
    text-align: center;
    

    grid-template-areas:
        ". main ."
        ". social ."; 
}

.footer-main,
.social-list {
    grid-column: 2 / -2;
}

.footer-logo,
.footer-text,
.footer-fineprint {
    opacity: .7;
    padding: 0;
}

.footer-item {
    padding: 2em, 0;
}

.footer-link {
    color: #fff;
    text-decoration: none;
    font-family: 'Source Sans Pro', sans-serif;
    font-size: 1.6rem;
    font-weight: 400;

    opacity: 0.8;
    
}

.footer-main {
    grid-area: main;
    font-size: 1.6rem;
}

.footer-text{
    margin: 0;
}

.footer-fineprint {
    font-size: 1.2rem;
    margin: 0, 0, 2em, 0;
}

.social-list {
    grid-area: social;
    list-style: none;
    padding: 0;
    margin: 3.2em;
    display: flex;
    justify-content: center;
}

.social-link {
    color: #fff;
    font-size: 2.8rem;
    opacity: 0.7;

    margin: 0 .8em;
}

.social-link:hover
.social-link:focus {
    color: #4b7237;
}

@media (min-width: 600px) {
    .footer {
        grid-template-areas: 
          ". main main social ."
    }

    .footer-main {
        text-align: left;
    }
    
    .social-list {
        justify-content: flex-end;
    }
  
}


/* ==================
    hero area
===================== */

/* .hero is the container for image title and CTA */
.hero {
    background-color: #4b7237;
    color: #fff;

    height: 80vh;

    text-align: center;
    position: relative; 
    z-index: -1000;
}

/* this centres all children of .hero i.e. all of the content goes in the centre column, 
with the narrow first and third columns as margin */
.hero > * {
    grid-column: 2 / -2;
}

.hero-bg-img {
    position: relative;
    z-index: -100;
}
/* Pseudo and relative/absolute positioning allows opacity. CSS doesn't have a background-opacity property */
.hero-bg-img:before { 
    content: ' ';
    /* display: block; */
    position: absolute;
    
    opacity: 0.6;
    /* top: 0; */
    left: 0; 
    width: 100%;
    height: 80vh;

    background-image: url(images/Epidavros_main.jpg);
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center; 
    /*background-position: bottom; Put bg-img to cover under Nav too. Maybe change this back here and have no opacity on navbar?*/
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    z-index: -10;
}

.hero-text {
    position: relative;
    /* width: 327px; */
    /* height: 351px; */
    left: auto;
    right: auto;
    top: 12em;
    z-index: -1;
}



@media (min-width: 400px) {
    .hero > * {
        margin-right: 10%; /*bg-img issue around 600px without this*/  
    }
}

@media (min-width: 600px) {
    .hero {
        padding: 16em 0 9.6em;
    }
    
    .hero > * {
        grid-column: 2 / span 2; /*stops it going over bg img*/
    }

}

/* ==================
    info section
===================== */

.info {
    padding: 6.4em 0 3em 0;
    text-align: center;
    position: relative;
}

/* .gradient-rectangle {
    width: 100%;
    height: 100px;
    top: -5rem;
    background: linear-gradient(180.07deg, #0F170B 74.1%, rgba(15, 23, 11, 0) 99.21%);
    mix-blend-mode: normal;
    transform: rotate(-180deg);
    position: absolute;
} */

.col {
    grid-column: 2 / -2;
    margin-bottom: 3em;
}

.col > p {
    margin-bottom: 2.5em;
    font-weight: 300;
    line-height: 2.5rem;
    letter-spacing: 1px;
}

  /*on bigger screens want them to span across centre columns, 
    but if you span 1 they'll start from tiny left column.
    the col:first child sets the first child to column 2, and then they span*/
@media (min-width: 600px) {
  
    .col {
        grid-column: span 1;
        margin-bottom: .5em;
    }
    
    .col:first-child {
        grid-column: 2 / span 1;
    }
}

/* ==================
       TIMELINE
===================== */

.timeline {
    background-image: linear-gradient(180deg, rgba(15, 23, 11, 0.5) 5%, rgba(156, 183, 140, 0.1), rgba(15, 23, 11, 0.5) 95%);

}


.timeline-grid {
    
    display: grid;
    grid-template-columns: minmax(1em, 1em) 1fr 3fr minmax(1em, 1em);
    grid-column-gap: 1.5em;
    /* grid-column-gap: 3.2em; */
}

.col-dates {

    grid-column: 2;
    margin: 0;
    padding: 1em 0;

    border-right: solid 3px yellow;
}

.col-details {

    grid-column: 3;
    margin: 0;
    padding: 1em 0;
}

/* ==================
         MAP
===================== */

.map-section {
    background-image: url(/images/map/map-final.svg);
    background-repeat: no-repeat;
    background-position: center; 
    /*background-position: bottom; Put bg-img to cover under Nav too. Maybe change this back here and have no opacity on navbar?*/
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    transform: scale(1);

    min-height: 70vh;
    margin-top: 10em;
    margin-bottom: 3em;
}

.map-text > p {
    position: absolute;
    /* left: 25%; */
}

.capital {
    font-family: 'Source Serif Pro', serif;
    font-size: 12px;
    line-height: 15px;
    letter-spacing: 0.05rem;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25), -1px -1px 2px rgba(1, 1, 1, 0.25);
}

.theatre {
    font-family: 'Source Serif Pro', serif;
    font-style: normal;
    font-weight: normal;
    font-size: 16px;
    line-height: 20px;
    letter-spacing: 0.05rem;
    color: #FFFFFF;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25), -1px -1px 2px rgba(1, 1, 1, 0.25);
}

/* Map text - text links work repsonsively? Or put text in svg and map clickable areas? */

/* .tirana {
    top: 35%;
    left: 3.6em;
}

.apollonia {
    top: 38%;
    left: 4.2em;
} */

/* ==================
    template page
===================== */

.main-template {
    padding: 6.4em 0;
}

.main-template > * {
    grid-column: 2 / -2; 
}

.main-image {
    margin-bottom: 2.4em;
    box-shadow: 5px 5px 0px black, 10px 10px 0 #FFE600;
}

@media (min-width: 600px) {
    .main-image,
    .secondary-text {
        grid-column: 2;
    }
    
    .main-text {
        grid-column: 3 / span 2;
        grid-row: span 2;
    }
    
    .secondary-text {
        order: 2;
    }
    
}

/* ==================
    form
===================== */

.contact-form {
    display: grid;
}

label {
    font-weight: 700;
    font-size: 1.6rem;
}

input,
textarea {
    margin-bottom: 1.2em;
    padding: .64em;
    font-family: inherit;
}

textarea {
    resize: none;
    height: 100px;
}

@media (min-width: 600px) {
    /* .contact-form {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .fname-label,
    .fname-input {
        grid-column: 1;
    }
    
    .lname-label,
    .lname-input {
        grid-column: 2;
    }
    
    .message-label,
    .message-textarea {
        grid-column: span 2;
    } */


    .contact-form {
        grid-template-columns: repeat(2, 1fr);
        grid-auto-flow: dense; /*above method works. This method has a little less code, 
                                but uses dense cos this way you get empty cells (turn dense off to see)*/
        grid-column-gap: 1.6em; 
    }

    .fname-label,
    .fname-input {
        grid-column: 1;
    }

    .lname-label,
    .lname-input {
        grid-column: 2;
    }

    .message-label,
    .message-textarea {
        grid-column: span 2;
    }

    .btn-form {
        grid-column: 2;
    }

}